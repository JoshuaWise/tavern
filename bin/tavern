#!/usr/bin/env node
/*
 * tavern
 * https://github.com/JoshuaWise/tavern
 *
 * Copyright (c) 2015 Joshua Wise, contributors
 * Licensed under the MIT license.
 * https://github.com/JoshuaWise/tavern/LICENSE
 */
 
'use strict';
process.title = 'tavern-cli';
var extractNextArgument = require('../lib/cli/extract-next-argument');

var commands = {
	'': require('../lib/cli/help'),
	'help': require('../lib/cli/help'),
	// 'update': require('../lib/cli/commands/update'),
	'init': require('../lib/cli/commands/init'),
	'open': require('../lib/cli/commands/open'),
	'close': require('../lib/cli/commands/close'),
	'restart': [require('../lib/cli/commands/close'), require('../lib/cli/commands/open')],
	'log': require('../lib/cli/commands/log'),
	// 'cms': require('../lib/cli/commands/cms'),
	// 'clear': require('../lib/cli/commands/clear')
};

(function main() {
	var suppliedCommand = extractNextArgument();
	
	if (!commands.hasOwnProperty(suppliedCommand)) {
		return commandNotFound(suppliedCommand);
	}
	
	var actionSequence = Array.isArray(commands[suppliedCommand])
		? commands[suppliedCommand]
		: [commands[suppliedCommand]];
	
	function createDoneFunction() {
		var alreadyCalled = false;
		return function done() {
			if (!alreadyCalled) {
				alreadyCalled = true;
				var action = actionSequence.shift();
				if (action == null) process.exit(0);
				new action(createDoneFunction(), suppliedCommand);
			}
		};
	}
	
	createDoneFunction()();
}());

function commandNotFound(suppliedCommand) {
	console.error('Invalid tavern command: \'' + suppliedCommand + '\'.\n');
	console.log('Available commands:');
	Object.getOwnPropertyNames(commands).forEach(function(commandName) {
		if (commandName) console.log('\t' + commandName);
	});
	process.exit(1);
}
