/*
 * tavern
 * https://github.com/JoshuaWise/tavern
 *
 * Copyright (c) 2015 Joshua Wise, contributors
 * Licensed under the MIT license.
 * https://github.com/JoshuaWise/tavern/LICENSE
 */

'use strict';
var path = require('path');
var fs = require('fs');

exports.serverIsRunning = function (tavernDir) {
	var pid = getLatestPID(tavernDir);
	return processIsTavern(pid) && processExists(pid);
};

exports.terminateServer = function (tavernDir, force) {
	var pid = getLatestPID(tavernDir);
	return processIsTavern(pid) && killProcess(pid, force);
};

exports.writePID = function (tavernDir, pid) {
	fs.writeFileSync(getPIDPath(tavernDir), 'DO NOT EDIT THIS FILE.\n' + pid);
};

function processExists(pid) {
	try {
		if (pid == null) {throw 0;}
		process.kill(pid, 0);
		return true;
	} catch (err) {
		return false;
	}
}

function killProcess(pid, force) {
	try {
		if (pid == null) {throw 0;}
		process.kill(pid, force ? 'SIGKILL' : 'SIGTERM');
		return true;
	} catch (err) {
		return false;
	}
}

function processIsTavern(pid) {
	return true; // just check node name
}

function getPIDPath(tavernDir) {
	return path.join(tavernDir, '.pid');
}

function getLatestPID(tavernDir) {
	var pidPath = getPIDPath(tavernDir);
	try {
		var pid = +(fs.readFileSync(pidPath).toString().split('\n')[1]);
	} catch (err) {
		var pid = null;
	}
	return (Number.isFinite(pid) && pid > 0 && ~~pid === pid) ? pid : null;
}
